package day05.demo01;

/*
数组的概念：是一种容器，可以同时存放多个数据值。

数组的特点：
1. 数组是一种引用数据类型
2. 数组当中的多个数据，类型必须统一
3. 数组的长度在程序运行期间不可改变

数组的初始化：在内存当中创建一个数组，并且向其中赋予一些默认值。

两种常见的初始化方式：
动态初始化（指定长度）：在创建数组的时候，直接指定数组当中的数据元素个数。
静态初始化（指定内容）：在创建数组的时候，不直接指定数据个数多少，而是直接将具体的数据内容进行指定。

动态初始化数组的格式：
数据类型[] 数组名称 = new 数据类型[数组长度];

注意事项：
虽然静态初始化没有直接告诉长度，但是根据大括号里面的元素具体内容，也可以自动推算出来长度。

解析含义：
左侧数据类型：也就是数组当中保存的数据，全都是统一的什么类型
左侧的中括号：代表我是一个数组
左侧数组名称：给数组取一个名字
右侧的new：代表创建数组的动作
右侧数据类型：必须和左边的数据类型保持一致
右侧中括号的长度：也就是数组当中，到底可以保存多少个数据，是一个int数字
 */
public class Demo01Array {

    public static void main(String[] args) {
        // 为什么需要数组,举个例子 存储班级同学的分数 如果不使用数组 存储几位同学的成绩就需要几个变量，因为每个变量只能存储一个值
        int wangYing = 100;
        int xiaoMing = 99;
        int yusx = 98;

        // 创建一个数组，里面可以存放300个int数据
        // 格式：数据类型[] 数组名称 = new 数据类型[数组长度];
        int[] arrayA = new int[300];

        // 创建一个数组，能存放10个double类型的数据
        double[] arrayB = new double[10];

        // 创建一个数组，能存放5个字符串
        String[] arrayC = new String[5];

        // 如果使用数组存储  -- 静态初始化 指定内容
        int[] scoreArr = new int[]{100, 9, 98};


        // 省略格式的静态初始化
        int[] arrayA1 = {10, 20, 30};

        // 静态初始化的标准格式，可以拆分成为两个步骤
        int[] arrayB1;
        arrayB1 = new int[]{11, 21, 31};

        // 动态初始化也可以拆分成为两个步骤
        int[] arrayC1;
        arrayC1 = new int[5];

        // 静态初始化的省略格式，不能拆分成为两个步骤。
//        int[] arrayD;
//        arrayD = { 10, 20, 30 };

        Integer[] integers = new Integer[3];
        integers[0] = 1;

    }

}
